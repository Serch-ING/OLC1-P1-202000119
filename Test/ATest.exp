{
//ExpReg1 -> |.*|"L""D"?"L"."#""L";
// error por no tener datos ExpReg1 : "#";
//error por no encontrar estado ExpReg1 : "#1";
//error no encontro ningun estado ExpReg1 : "p";
//error no encontro estado para 1 ExpReg1 : "D1";
//error no encontro estado para 1 ExpReg1 : "DL1";
//error no encontro estado para 1 ExpReg1 : "DLLD1";
//error no tuvo datos para continuar ExpReg1 : "DLLD#";
//cadena combinada aceptada ExpReg1 : "DLLD#L";
//cadena combinada triple aceptada ExpReg1 : "DLLD#LL";
//error en cadena super combinada  ExpReg1 : "DLLD#LLDLLD#LLDLLD#LLDLLD#LLDLLD#LLDLLD#LL0";

//ExpReg1 -> |.*|"L""D"?"L"."#""L";
//exitoso
//ExpReg1 -> |.*|{L}{D}?{L}."#"{L};

CONJ: digito -> 0,1,2,3,4;
Conj: L-> D,L;
ExpReg2 -> {L};
%%

//ExpReg1 : "";
ExpReg2 : "DL";

}
